diff --exclude=.git --exclude=.hg -rupN ./src/eigen/Eigen/src/Core/util/Macros.h ./src/eigen_patched/Eigen/src/Core/util/Macros.h
--- ./src/eigen/Eigen/src/Core/util/Macros.h	2016-01-14 11:21:26.000000000 +0100
+++ ./src/eigen_patched/Eigen/src/Core/util/Macros.h	2016-01-14 10:50:19.000000000 +0100
@@ -372,8 +372,9 @@
 // Does the compiler support C++11 math?
 // Let's be conservative and enable the default C++11 implementation only if we are sure it exists
 #ifndef EIGEN_HAS_CXX11_MATH
-  #if (__cplusplus > 201103L) || (__cplusplus >= 201103L) && (EIGEN_COMP_GNUC_STRICT || EIGEN_COMP_CLANG || EIGEN_COMP_MSVC || EIGEN_COMP_ICC)  \
-      && (EIGEN_ARCH_i386_OR_x86_64) && (EIGEN_OS_GNULINUX || EIGEN_OS_WIN_STRICT || EIGEN_OS_MAC)
+   #if (__cplusplus > 201103L && !(EIGEN_COMP_GNUC_STRICT && EIGEN_OS_ANDROID)) \
+      || (__cplusplus >= 201103L) && (EIGEN_COMP_GNUC_STRICT || EIGEN_COMP_CLANG || EIGEN_COMP_MSVC || EIGEN_COMP_ICC)  \
+         && (EIGEN_ARCH_i386_OR_x86_64) && (EIGEN_OS_GNULINUX || EIGEN_OS_WIN_STRICT || EIGEN_OS_MAC)
     #define EIGEN_HAS_CXX11_MATH 1
   #else
     #define EIGEN_HAS_CXX11_MATH 0
diff --exclude=.git --exclude=.hg -rupN ./src/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h ./src/eigen_patched/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h
--- ./src/eigen/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	2016-01-14 11:21:06.000000000 +0100
+++ ./src/eigen_patched/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	2016-01-14 09:57:58.000000000 +0100
@@ -52,6 +52,10 @@ public:
         NumericalDiff(const T0& a0, const T1& a1) : Functor(a0, a1), epsfcn(0) {}
     template<typename T0, typename T1, typename T2>
         NumericalDiff(const T0& a0, const T1& a1, const T2& a2) : Functor(a0, a1, a2), epsfcn(0) {}
+    template<typename T0, typename T1, typename T2, typename T3>
+        NumericalDiff(const T0& a0, const T1& a1, const T2& a2, const T3& a3) : Functor(a0, a1, a2, a3), epsfcn(0) {}
+    template<typename T0, typename T1, typename T2, typename T3, typename T4>
+        NumericalDiff(const T0& a0, const T1& a1, const T2& a2, const T3& a3, const T4& a4) : Functor(a0, a1, a2, a3, a4), epsfcn(0) {}
 
     enum {
         InputsAtCompileTime = Functor::InputsAtCompileTime,
